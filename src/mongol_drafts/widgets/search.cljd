(ns mongol-drafts.widgets.search
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter.alpha2 :as f]
   [mongol-drafts.widgets.empty :as empty-content]
   [mongol-drafts.states.global :as global-state]
   [mongol-drafts.states.draft :as draft-state]
   [mongol-drafts.widgets.list :as list-content]))

(declare search-field)

(defn widget []
  (f/widget
   :context ctx
   :get [:search-controller]
   :watch [{{:keys [contents is-end]} :drafts} global-state/state]
   :bg-watcher ([^m/TextEditingValue {edit-text .-text} search-controller]
                (draft-state/query-drafts global-state/state edit-text false))
   (m/Positioned
    .top 0
    .left 0
    .right 0
    .bottom 360)
   (m/Material)
   (m/SafeArea .bottom false)
   (m/Container
    .width (- (-> m/MediaQuery (.of ctx) .-size .-width)
              60)
    .decoration (m/BoxDecoration
                 .color (-> m/Colors .blueGrey .-shade50)
                 .borderRadius
                 (.all m/BorderRadius (.circular m/Radius 6))
                 .border
                 (.all m/Border .color m.Colors/blueGrey .width 0.2))
    .margin (.only m/EdgeInsets .left 6 .right 6))
   (m/Row
    .mainAxisAlignment m.MainAxisAlignment/spaceBetween
    .children
    [(m/Column
      .mainAxisAlignment m.MainAxisAlignment/spaceBetween
      .children
      [(m/Material
        .borderRadius (.circular m/BorderRadius 25)
        .child
        (m/InkWell
         .customBorder (m/CircleBorder)
         .child (m/Icon (.search_outlined m/Icons)
                        .color (-> m/Colors .blueGrey .-shade600)
                        .size 36)))
       (search-field)
       (m/Material
        .borderRadius (.circular m/BorderRadius 25)
        .child
        (m/InkWell
         .customBorder (m/CircleBorder)
         .onTap (fn []
                  (swap! global-state/state assoc :show-search-diaglog false)
                  (swap! global-state/state assoc :show-stacked-keyboard false))
         .child (m/Icon (.cancel_outlined m/Icons)
                        .color m/Colors.blueGrey.shade600
                        .size 36)))])
     (m/Expanded
      .child
      (if (empty? contents)
        (empty-content/empty-content-view)
        (list-content/widget)))])))
  
(defn search-field []
  (f/widget
   :context ctx
   :get [:search-controller]
   (m/Expanded)
   (m/Padding
    .padding (.all m/EdgeInsets 6))
   (mgl/MongolTextField
    .controller search-controller
    .autofocus true
    .showCursor true
    .readOnly true
    .maxLines 1
    .minLines 1
    .onTap (fn []
             (swap! global-state/state assoc :show-stacked-keyboard true)
             (swap! global-state/state assoc :text-controller search-controller))
    .style (m/TextStyle .fontSize 16)
    .decoration
    (m/InputDecoration
     .suffixIcon
     (m/IconButton .onPressed
                   (fn []
                     (let [^m/TextEditingController controller search-controller]
                       (.clear controller)))
                   .icon (m/Icon (.clear m/Icons)))
     .isDense true
     ;;  Todo : when hintText is present Text cursor position error
     ;;  .hintText "Search"
     ;;  .contentPadding (.fromLTRB m/EdgeInsets 0 20 0 20)
     .border (m/OutlineInputBorder
              .borderSide (m/BorderSide
                           .width 0.8
                           .color m.Colors/blueGrey)
              .borderRadius (.circular m/BorderRadius 10))
     .focusedBorder (m/OutlineInputBorder
                     .borderSide (m/BorderSide
                                  .width 0.8
                                  .color m.Colors/blueGrey)
                     .borderRadius (.circular m/BorderRadius 10))))))
