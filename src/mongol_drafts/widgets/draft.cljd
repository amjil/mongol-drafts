(ns mongol-drafts.widgets.draft
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [virtual-keyboard.keyboard :as keyboard]
   [virtual-keyboard.keyboard-action :as keyboard-action]
   [virtual-keyboard.options :as keyboard-options]
   [mongol-drafts.widgets.button-bar :as button-bar]
   [cljd.flutter.alpha2 :as f]))

(defn widget []
  (f/widget
   :context ctx
   :managed [^m/TextEditingController text-controller (m/TextEditingController)
             ^m/TextEditingController tag-controller (m/TextEditingController)]
   :let [w  (-> m/MediaQuery (.of ctx) .-size .-width)
         h  (-> m/MediaQuery (.of ctx) .-size .-height)
         info (merge keyboard-options/keyboard-option {} {:width w})
         state (atom (merge keyboard-options/keyboard-state
                      {:tag-viewable false
                       :text-controller text-controller}))]
   :bind {:info info :state state
          :text-controller text-controller 
          :tag-controller tag-controller
          :context ctx}
   :watch [{:keys [tag-viewable]} state]
   (m/Column
    .children
    [(button-bar/topbar)
     (m/Expanded
      .child
      (m/Row
       .children
       [(if (true? tag-viewable)
          (button-bar/tagbar tag-controller)
          (m/Container))
        (m/Expanded
         .child
         (m/Padding
          .padding (.all m/EdgeInsets 6)
          .child
          (mgl/MongolTextField
           .controller text-controller
           .onTap (fn []
                    (swap! state assoc :text-controller text-controller))
           .decoration nil
           .maxLines 1000
           .autofocus true
           .showCursor true
           .readOnly true
           .style (m/TextStyle .fontSize 20))))
        (button-bar/toolbar)]))
     (m/Container
      .color (-> m/Colors .blue .-shade100)
      .child
      (keyboard/keyboard))])))