(ns mongol-drafts.widgets.button-bar
  (:require 
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter.alpha2 :as f]))

(defn bar-button [child on-press]
  (m/Material
   .child
   (m/InkWell
    .onTap on-press
    .child child)))

(defn topbar []
  (f/widget
   :context ctx
   :get [:state :info :text-controller]
   (m/Row
    .mainAxisAlignment m.MainAxisAlignment/spaceAround
    .children
    [(m/Expanded
      .child (m/Row
              .mainAxisAlignment m.MainAxisAlignment/spaceAround
              .children
              [(m/Icon (.article_outlined m/Icons))
               (m/Icon (.add m/Icons))
               (bar-button
                (m/Icon (.sell_outlined m/Icons))
                (fn []
                  (swap! state
                         assoc
                         :tag-viewable
                         (not (:tag-viewable @state)))
                  (if (false? (:tag-viewable @state))
                    (swap! state
                           assoc
                           :text-controller
                           text-controller))))]))
     (m/Container
      .width (/ (:width info) 3)
      .height 30)
     (m/Expanded
      .child (m/Row
              .mainAxisAlignment m.MainAxisAlignment/spaceAround
              .children
              [(m/Icon (.arrow_drop_down m/Icons))
               (m/Icon (.search m/Icons))
               (m/Icon (.view_sidebar_outlined m/Icons))]))])))

(defn toolbar-button [child on-press]
  (f/widget
   (m/RotatedBox
    .quarterTurns 1)
   (m/Material
    .color (-> m.Colors/blue .-shade200))
   (m/InkWell
    .onTap on-press)
   (m/Padding
    .padding (.all m/EdgeInsets 6)
    .child child)))

(defn toolbar-button-normal [child on-press]
  (f/widget
   (m/Material
    .color (-> m.Colors/blue .-shade200))
   (m/InkWell
    .onTap on-press)
   (m/Padding
    .padding (.all m/EdgeInsets 6)
    .child child)))

(defn toolbar-text-button [child on-press]
  (f/widget
   (m/Material
    .color (-> m.Colors/blue .-shade200))
   (m/InkWell
    .onTap on-press)
   (m/Padding
    .padding (.all m/EdgeInsets 6))
   (m/Row
    .children [(m/Column
                .children
                [(m/RotatedBox
                  .quarterTurns 1
                  .child child)
                 (m/RotatedBox
                  .quarterTurns 1
                  .child (m/Text "word"))])])))

(defn toolbar []
  (f/widget
   :get [:state]
   (m/Container
    .color (-> m/Colors .blue .-shade50)
    .height double/infinity)
   (m/Padding
    .padding (.all m/EdgeInsets 5))
   (m/Column
    .children
    [(m/GestureDetector
      .child (m/Icon (.menu m/Icons))
      .onTap (fn []
               (dart:core/print "menu button >>")))
     (m/Expanded
      .child
      (m/SingleChildScrollView
       .scrollDirection m.Axis/vertical
       .child
       (m/Wrap
        .crossAxisAlignment m.WrapCrossAlignment/center
        .direction m.Axis/vertical
        .spacing 5
        .children
        [(toolbar-button
          (m/Icon (.redo m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (toolbar-button
          (m/Icon (.undo m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (m/SizedBox .height 8)
         (toolbar-button
          (m/Icon (.arrow_back_outlined m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (toolbar-button
          (m/Icon (.arrow_forward_outlined m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (toolbar-text-button
          (m/Icon (.arrow_back_outlined m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (toolbar-text-button
          (m/Icon (.arrow_forward_outlined m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (m/SizedBox .height 8)
         (toolbar-button-normal
          (m/Icon (.date_range_outlined m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (toolbar-button-normal
          (m/Icon (.copy m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (toolbar-button-normal
          (m/Icon (.paste m/Icons))
          #(dart:core/print "toolbar-button >>>>"))
         (toolbar-button-normal
          (m/Icon (.select_all m/Icons))
          #(dart:core/print "toolbar-button >>>>"))])))
     (m/Container
      .height 40
      .child
      (m/GestureDetector
       .child (m/Icon (.keyboard_arrow_down m/Icons))
       .onTap (fn []
                (swap! state
                       assoc
                       :show-keyboard
                       (not (:show-keyboard @state))))))])))


;;;
(defn tagbar-button [text on-press]
  (f/widget
   (m/Material
    .color (-> m.Colors/blue .-shade200))
   (m/InkWell
    .onTap on-press)
   (m/Padding
    .padding (.all m/EdgeInsets 6))
   (m/Row
    .children [(m/Column
                .children
                [(m/Icon (.remove_circle m/Icons))
                 (m/SizedBox .height 4)
                 (m/RotatedBox
                  .quarterTurns 1
                  .child (m/Text text))])])))

(defn tagbar [controller]
  (f/widget
   :get [:state :text-controller :tag-controller]
   :managed [focus (m/FocusNode)]
   :watch [{:keys [tag-on-edit]} state]
   :bg-watcher ([^m/TextEditingValue {tag-edit-text .-text} tag-controller]
                (if (and (not (empty? tag-edit-text)) (.endsWith tag-edit-text "\n"))
                  (do
                    ;; (.substring tag-edit-text 0
                    ;;             (dec (.-length tag-edit-text)))
                    ;; TODO
                    (let [^m/TextEditingController controller tag-controller]
                      (.clear controller))
                    (dart:core/print (str ">>> ")))
                  (dart:core/print (str "11>>> "))))
   (m/Container
    .color (-> m/Colors .blue .-shade50)
    .height double/infinity)
   (m/Padding
    .padding (.all m/EdgeInsets 5))
   (m/SingleChildScrollView
    .scrollDirection m.Axis/vertical)
   (m/Wrap
    .crossAxisAlignment m.WrapCrossAlignment/center
    .direction m.Axis/vertical
    .spacing 5
    .children
    [(toolbar-button-normal
      (m/Icon (.flag m/Icons))
      #(dart:core/print "tag button >>."))
     (m/SizedBox .height 8)
     (m/IntrinsicHeight
      .child
      (m/Container
       .constraints (m/BoxConstraints .minHeight 50)
       .alignment m.Alignment/center
       .decoration (m/BoxDecoration
                    .borderRadius
                    (.all m/BorderRadius (.circular m/Radius 10))
                    .border
                    (.all m/Border .color m.Colors/blue .width 1))
       .child
       (m/Padding
        .padding (.all m/EdgeInsets 8)
        .child
        (if (true? tag-on-edit)
          (mgl/MongolTextField
           .focusNode focus
           .controller controller
           .showCursor true
           .readOnly true
           .style (m/TextStyle .fontSize 14)
           .maxLines 2
           .minLines 1
           .decoration nil)
          (m/GestureDetector
           .onTap (fn []
                    (swap! state assoc :text-controller tag-controller)
                    (swap! state assoc :tag-on-edit true)
                    (.requestFocus focus))
           .child
           (m/RotatedBox
            .quarterTurns 1
            .child
            (m/Text "+ tag")))))))
     (m/SizedBox .height 8)
     (tagbar-button "ᠪᠦᠬᠦ" #(prn "a"))
     (tagbar-button "ᠰᠣᠨᠢᠨ" #(prn "b"))])))