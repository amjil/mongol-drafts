(ns mongol-drafts.widgets.list
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   ["package:flutter_slidable/flutter_slidable.dart" :as slidable]
   [cljd.flutter.alpha2 :as f]))

(def entities 
  ["abc" "When The Trees Grow up"])

(defn widget []
  (f/widget
   :context ctx
   :let [h (-> m/MediaQuery (.of ctx) .-size .-height)]
   (m.ListView/separated
    .separatorBuilder (fn [_ i] (m/VerticalDivider .color m.Colors/white .width 1))
    .scrollDirection m.Axis/horizontal
    .padding (.fromLTRB m/EdgeInsets 20 20 8 8)
    .itemCount (count entities)
    .itemBuilder
    (fn [^m/BuildContext context i]
      (f/widget
       (slidable/Slidable
        .key (m/ValueKey i)
        .direction m/Axis.vertical
        .endActionPane
        (slidable/ActionPane
         .motion (slidable/ScrollMotion)
         .dismissible (slidable/DismissiblePane .onDismissed (fn [] (dart:core/print "slide")))
         .children
         [(slidable/SlidableAction .onPressed (fn [_] (dart:core/print "slide"))
                                   .backgroundColor (.green m/Colors)
                                   .foregroundColor (.white m/Colors)
                                   .icon (.flag m/Icons)
                                   .label nil)
          (slidable/SlidableAction .onPressed (fn [_] (dart:core/print "slide"))
                                   .backgroundColor (.red m/Colors)
                                   .foregroundColor (.white m/Colors)
                                   .icon (.delete m/Icons))
          (slidable/SlidableAction .onPressed (fn [_] (dart:core/print "slide"))
                                   .backgroundColor (.blue m/Colors)
                                   .foregroundColor (.white m/Colors)
                                   .icon (.archive m/Icons))]))
       (m/Container
        .height (- h 40)
        ;; .width 48
      ;;  .constraints
      ;;  (m/BoxConstraints
      ;;   .maxWidth 40
      ;;   .height h)
        )
       (m/Padding
        .padding (.only m/EdgeInsets .left 10 .right 10))
       (mgl/MongolText (nth entities i)))))))

