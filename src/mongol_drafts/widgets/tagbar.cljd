(ns mongol-drafts.widgets.tagbar
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter.alpha2 :as f]
   [mongol-drafts.states.tag :as tag-state]))

(defn tag-text-button [text on-press]
  (f/widget
   (m/Material
    .borderRadius (.circular m/BorderRadius 25)
    .color (-> m.Colors/blue .-shade200))
   (m/InkWell
    .customBorder (m/CircleBorder)
    .onTap on-press)
   (m/Padding
    .padding (.all m/EdgeInsets 6))
   (m/Row
    .children [(m/Column
                .children
                [(m/Icon (.remove_circle m/Icons)
                         .size 14)
                 (m/SizedBox .height 4)
                 (m/RotatedBox
                  .quarterTurns 1
                  .child (m/Text text))
                 (m/SizedBox .height 4)])])))

(defn tagbar [controller]
  (f/widget
   :get [:state :text-controller :tag-controller]
   :managed [focus (m/FocusNode)]
   :watch [{:keys [tag-on-edit
                   draft-tags]} state]
   :bg-watcher ([^m/TextEditingValue {tag-edit-text .-text} tag-controller]
                (when (and (not (empty? tag-edit-text)) (.endsWith tag-edit-text "\n"))
                  (let [text (.substring tag-edit-text 0
                                         (dec (.-length tag-edit-text)))
                        ^m/TextEditingController controller tag-controller]
                    (tag-state/add-draft-tag state text)
                    (.clear controller))))
   (m/Container
    .color (-> m/Colors .blue .-shade50)
    .height double/infinity)
   (m/Padding
    .padding (.all m/EdgeInsets 4))
   (m/SingleChildScrollView
    .scrollDirection m.Axis/vertical)
   (m/Wrap
    .crossAxisAlignment m.WrapCrossAlignment/center
    .direction m.Axis/vertical
    .spacing 5
    .children
    (concat 
    [(m/Material
      .color (-> m.Colors/blue .-shade200)
      .borderRadius (.circular m/BorderRadius 25)
      .child
      (m/InkWell
       .customBorder (m/CircleBorder)
       .onTap #(dart:core/print "tag button >>.")
       .child
       (m/Padding
        .padding (.all m/EdgeInsets 2)
        .child (m/Icon (.flag m/Icons)))))
     (m/SizedBox .height 4)
     (m/IntrinsicHeight
      .child
      (m/Container
       .constraints (m/BoxConstraints .minHeight 50)
       .alignment m.Alignment/center
       .decoration (m/BoxDecoration
                    .borderRadius
                    (.all m/BorderRadius (.circular m/Radius 10))
                    .border
                    (.all m/Border .color m.Colors/blue .width 0.8))
       .child
       (m/Padding
        .padding (.all m/EdgeInsets 8)
        .child
        (if (and (true? tag-on-edit))
          (mgl/MongolTextField
           .focusNode focus
           .controller controller
           .showCursor true
           .readOnly true
           .style (m/TextStyle .fontSize 12)
           .maxLines 1
           .minLines 1
           .decoration nil)
          (m/GestureDetector
           .onTap (fn []
                    (swap! state assoc :text-controller tag-controller)
                    (swap! state assoc :tag-on-edit true)
                    (if (false? (:show-keyboard @state))
                      (swap! state assoc :show-keyboard true))
                    (.requestFocus focus))
           .child
           (m/RotatedBox
            .quarterTurns 1
            .child
            (m/Text "+ tag" .style (m/TextStyle .fontSize 12))))))))
     (m/SizedBox .height 8)]
     (map #(tag-text-button 
            (get % "name")
            (fn [] (tag-state/delete-draft-tag state (get % "id"))))
          draft-tags)))))