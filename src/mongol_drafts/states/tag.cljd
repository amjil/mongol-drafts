(ns mongol-drafts.states.tag
  (:require
   [mongol-drafts.services.tag :as tag-service]))

(defn get-draft-tags [state]
  (let [draft-id (-> @state :draft (get "id"))
        tags (await (tag-service/query-draft-tags draft-id))]
    (swap! state assoc :draft-tags (into [] tags))))

(defn add-draft-tag [state name]
  (let [id  (await (tag-service/create-tag name))
        draft-id (-> @state :draft (get "id"))
        _ (await (tag-service/add-draft-tag draft-id id))]
    (swap! state update :draft-tags conj
           {"id" id "name" name "related_num" 1})))

(defn delete-draft-tag [state id]
  (let [draft (:draft @state)
        tags (:draft-tags @state)
        _ (await (tag-service/delete-draft-tag (:draft_id draft) id))]
    (swap! state assoc :draft-tags 
           (remove #(= id (:id %)) tags))))

(defn query-tags [state q]
  (let [result (await (tag-service/query-tags q))]
    (swap! state assoc :tags result)))

(defn all-tags [state]
  (let [result (await (tag-service/all-tags))]
    (swap! state assoc :tags result)))